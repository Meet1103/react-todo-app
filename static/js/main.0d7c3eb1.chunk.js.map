{"version":3,"sources":["Components/TodoForm/TodoForm.js","Components/Todo/Todo.js","Components/TodoList/TodoList.js","App.js","index.js"],"names":["TodoForm","name","updateId","handleChange","handleSubmit","inputRef","className","onSubmit","type","autoFocus","autoComplete","ref","value","onChange","required","Todo","index","completed","checkTodo","updateTodo","deleteTodo","draggableId","provided","innerRef","draggableProps","dragHandleProps","onClick","TodoList","todos","droppableId","droppableProps","map","todo","id","placeholder","App","useState","setName","todosArray","localStorage","getItem","JSON","parse","getTodosFromLocalStorage","setTodos","setUpdateId","useRef","useEffect","setItem","stringify","inputFocus","current","focus","addTodo","newTodo","uuidv4","e","target","preventDefault","find","length","onDragEnd","result","destination","reorderedTodoItems","Array","from","splice","source","reorderedItem","completedTodo","updatedTodo","remainingTodos","filter","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0d7c3eb1.chunk.js","sourcesContent":["import React from 'react'\r\nimport './TodoForm.css'\r\n\r\nconst TodoForm = ({\r\n\tname,\r\n\tupdateId,\r\n\thandleChange,\r\n\thandleSubmit,\r\n\tinputRef,\r\n}) => {\r\n\treturn (\r\n\t\t<form\r\n\t\t\tclassName='todo-input-form'\r\n\t\t\tonSubmit={handleSubmit}>\r\n\t\t\t<input\r\n\t\t\t\ttype='text'\r\n\t\t\t\tname='text'\r\n\t\t\t\tclassName='todo-input'\r\n\t\t\t\tautoFocus='on'\r\n\t\t\t\tautoComplete='off'\r\n\t\t\t\tref={inputRef}\r\n\t\t\t\tvalue={name}\r\n\t\t\t\tonChange={handleChange}\r\n\t\t\t\trequired\r\n\t\t\t/>\r\n\t\t\t<button type='submit' className='add-todo-btn'>\r\n\t\t\t\t{!updateId ? 'Add Todo' : 'Save Todo'}\r\n\t\t\t</button>\r\n\t\t</form>\r\n\t)\r\n}\r\n\r\nexport default TodoForm\r\n","import React from \"react\";\r\nimport {Draggable} from 'react-beautiful-dnd';\r\nimport './Todo.css'\r\n\r\nconst Todo = ({index, name ,completed, checkTodo, updateTodo, deleteTodo}) => {\r\n    return (\r\n        <Draggable draggableId={`todo-${index}`} key={index} index={index}>\r\n            {\r\n            (provided) => (\r\n                <div className={!completed ? \"todo-item\" : \"todo-item completed-todo-item\"} ref={provided.innerRef} {...provided.draggableProps} {...provided.dragHandleProps}>\r\n                    <li className=\"todo\">{name}</li>\r\n                    <div>\r\n                        <button className=\"checkbtn\" onClick={checkTodo}>\r\n                            <i className=\"fas fa-check-square\"></i>\r\n                        </button>\r\n                        <button className=\"updatebtn\" onClick={updateTodo}>\r\n                            <i className=\"far fa-edit\"></i>\r\n                        </button>\r\n                        <button className=\"deletebtn\" onClick={deleteTodo}>\r\n                            <i className=\"far fa-trash-alt\"></i>\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            )\r\n            }\r\n        </Draggable>\r\n    );\r\n}\r\n\r\nexport default Todo;","import React from 'react'\r\nimport { Droppable } from 'react-beautiful-dnd';\r\nimport Todo from '../Todo/Todo'\r\nimport './TodoList.css'\r\n\r\nconst TodoList = ({todos, checkTodo, updateTodo, deleteTodo}) => {\r\n  return (\r\n        <Droppable droppableId=\"todo\">\r\n            { provided => (\r\n            <div className=\"todo-container\"  {...provided.droppableProps} ref={provided.innerRef}>\r\n            {\r\n              todos.map((todo,index) => (\r\n                <Todo\r\n                key={todo.id}\r\n                index={index}\r\n                name={todo.name}\r\n                completed={todo.completed}\r\n                checkTodo={() => checkTodo(todo.id)}\r\n                updateTodo={() => updateTodo(todo.id)}\r\n                deleteTodo={() => deleteTodo(todo.id)}\r\n                />\r\n              ))\r\n            }\r\n            {provided.placeholder}\r\n            </div>\r\n            )}\r\n        </Droppable>\r\n  );\r\n}\r\n\r\nexport default TodoList;","import React, { useState, useEffect, useRef } from 'react';\r\nimport { DragDropContext } from 'react-beautiful-dnd';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport TodoForm from './Components/TodoForm/TodoForm';\r\nimport TodoList from './Components/TodoList/TodoList';\r\nimport './App.css';\r\n\r\nconst getTodosFromLocalStorage = () => {\r\n\tlet todosArray = localStorage.getItem('todo');\r\n\r\n\tif (todosArray !== null) {\r\n\t\treturn JSON.parse(todosArray);\r\n\t} else {\r\n\t\treturn [];\r\n\t}\r\n};\r\n\r\nconst App = () => {\r\n\tconst [name, setName] = useState('');\r\n\tconst [todos, setTodos] = useState(\r\n\t\tgetTodosFromLocalStorage()\r\n\t);\r\n\tconst [updateId, setUpdateId] = useState(null);\r\n\tconst inputRef = useRef();\r\n\r\n\tuseEffect(() => {\r\n\t\tlocalStorage.setItem('todo', JSON.stringify(todos));\r\n\t}, [todos, updateId]);\r\n\r\n\tfunction onDragEnd(result) {\r\n\t\tif (!result.destination) return;\r\n\r\n\t\tconst reorderedTodoItems = Array.from(todos);\r\n\t\tconst [reorderedItem] = reorderedTodoItems.splice(\r\n\t\t\tresult.source.index,\r\n\t\t\t1\r\n\t\t);\r\n\t\treorderedTodoItems.splice(\r\n\t\t\tresult.destination.index,\r\n\t\t\t0,\r\n\t\t\treorderedItem\r\n\t\t);\r\n\r\n\t\tsetTodos(reorderedTodoItems);\r\n\t}\r\n\r\n\tconst handleChange = (e) => {\r\n\t\tsetName(e.target.value);\r\n\t};\r\n\r\n\tconst handleSubmit = (e) => {\r\n\t\te.preventDefault();\r\n\t\tif (updateId) {\r\n\t\t\tconst updateTodoValue = todos.find(\r\n\t\t\t\t(todo, index) => todo.id === updateId\r\n\t\t\t);\r\n\t\t\tupdateTodoValue.name = name;\r\n\t\t\tsetName('');\r\n\t\t\tsetUpdateId(null);\r\n\t\t} else {\r\n\t\t\taddTodo(name);\r\n\t\t\tsetName('');\r\n\t\t}\r\n\t};\r\n\r\n\tconst inputFocus = () => {\r\n\t\tinputRef.current.focus();\r\n\t};\r\n\r\n\tconst clearTodo = (e) => {\r\n\t\te.preventDefault();\r\n\t\tsetTodos([]);\r\n\t\tinputFocus();\r\n\t};\r\n\r\n\tconst addTodo = (name) => {\r\n\t\tconst newTodo = {\r\n\t\t\tid: uuidv4(),\r\n\t\t\tname: name,\r\n\t\t\tcompleted: false\r\n\t\t};\r\n\t\tsetTodos([...todos, newTodo]);\r\n\t\tinputFocus();\r\n\t};\r\n\r\n\tconst checkTodo = (id) => {\r\n\t\tconst completedTodo = todos.map((todo, index) => {\r\n\t\t\tif (todo.id === id) {\r\n\t\t\t\treturn { ...todo, completed: !todo.completed };\r\n\t\t\t}\r\n\t\t\treturn todo;\r\n\t\t});\r\n\t\tsetTodos(completedTodo);\r\n\t};\r\n\r\n\tconst updateTodo = (id) => {\r\n\t\tconst updatedTodo = todos.find(\r\n\t\t\t(todo, index) => todo.id === id\r\n\t\t);\r\n\t\tsetName(updatedTodo.name);\r\n\t\tsetUpdateId(updatedTodo.id);\r\n\t\tinputFocus();\r\n\t};\r\n\r\n\tconst deleteTodo = (id) => {\r\n\t\tconst remainingTodos = todos.filter(\r\n\t\t\t(todo, index) => todo.id !== id\r\n\t\t);\r\n\t\tsetTodos(remainingTodos);\r\n\t\tinputFocus();\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div className='App'>\r\n\t\t\t<header className='heading'>TODO APP</header>\r\n\t\t\t<TodoForm\r\n\t\t\t\tname={name}\r\n\t\t\t\tupdateId={updateId}\r\n\t\t\t\thandleChange={handleChange}\r\n\t\t\t\thandleSubmit={handleSubmit}\r\n\t\t\t\tinputRef={inputRef}\r\n\t\t\t/>\r\n\t\t\t{todos.length > 0 ? (\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<DragDropContext onDragEnd={onDragEnd}>\r\n\t\t\t\t\t\t<TodoList\r\n\t\t\t\t\t\t\ttodos={todos}\r\n\t\t\t\t\t\t\tcheckTodo={checkTodo}\r\n\t\t\t\t\t\t\tupdateTodo={updateTodo}\r\n\t\t\t\t\t\t\tdeleteTodo={deleteTodo}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</DragDropContext>\r\n\t\t\t\t\t<button\r\n\t\t\t\t\t\ttype='submit'\r\n\t\t\t\t\t\tonClick={clearTodo}\r\n\t\t\t\t\t\tclassName='clear-todo-list-btn'>\r\n\t\t\t\t\t\tClear Todo List\r\n\t\t\t\t\t</button>\r\n\t\t\t\t</div>\r\n\t\t\t) : (\r\n\t\t\t\t<p className='initial-text'>No Todo Added</p>\r\n\t\t\t)}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);"],"sourceRoot":""}